// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReceteNew.Data;

#nullable disable

namespace ReceteNew.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230818141415_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReceteNew.models.Tani", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("guncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("olusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tanilar");
                });

            modelBuilder.Entity("ReceteNew.models.doktor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tckn")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<Guid>("guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("guncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("olusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("pinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doktorlar");
                });

            modelBuilder.Entity("ReceteNew.models.ilac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("guncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("olusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ilaclar");
                });

            modelBuilder.Entity("ReceteNew.models.recete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoktorId")
                        .HasColumnType("int");

                    b.Property<string>("EreceteNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("doctorId")
                        .HasColumnType("int");

                    b.Property<Guid>("guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("guncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("olusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("receteTuru")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoktorId");

                    b.ToTable("Receteler");
                });

            modelBuilder.Entity("ReceteNew.models.receteİlac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("adet")
                        .HasColumnType("int");

                    b.Property<int>("doz")
                        .HasColumnType("int");

                    b.Property<Guid>("guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("guncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("ilacId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("olusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("periyot")
                        .HasColumnType("int");

                    b.Property<int>("receteId")
                        .HasColumnType("int");

                    b.Property<int>("useTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ilacId");

                    b.HasIndex("receteId");

                    b.HasIndex("useTypeId");

                    b.ToTable("Receteİlaclari");
                });

            modelBuilder.Entity("ReceteNew.models.useType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("guncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("olusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UseType");
                });

            modelBuilder.Entity("Tanirecete", b =>
                {
                    b.Property<int>("RecetelerId")
                        .HasColumnType("int");

                    b.Property<int>("TanilarId")
                        .HasColumnType("int");

                    b.HasKey("RecetelerId", "TanilarId");

                    b.HasIndex("TanilarId");

                    b.ToTable("Tanirecete");
                });

            modelBuilder.Entity("ReceteNew.models.recete", b =>
                {
                    b.HasOne("ReceteNew.models.doktor", "Doktor")
                        .WithMany()
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doktor");
                });

            modelBuilder.Entity("ReceteNew.models.receteİlac", b =>
                {
                    b.HasOne("ReceteNew.models.ilac", "İlac")
                        .WithMany("Receteİlaclari")
                        .HasForeignKey("ilacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReceteNew.models.recete", "Recete")
                        .WithMany("Receteİlaclari")
                        .HasForeignKey("receteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReceteNew.models.useType", "UseType")
                        .WithMany()
                        .HasForeignKey("useTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recete");

                    b.Navigation("UseType");

                    b.Navigation("İlac");
                });

            modelBuilder.Entity("Tanirecete", b =>
                {
                    b.HasOne("ReceteNew.models.recete", null)
                        .WithMany()
                        .HasForeignKey("RecetelerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReceteNew.models.Tani", null)
                        .WithMany()
                        .HasForeignKey("TanilarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReceteNew.models.ilac", b =>
                {
                    b.Navigation("Receteİlaclari");
                });

            modelBuilder.Entity("ReceteNew.models.recete", b =>
                {
                    b.Navigation("Receteİlaclari");
                });
#pragma warning restore 612, 618
        }
    }
}
